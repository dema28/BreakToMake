package com.breaktomake;

import com.breaktomake.config.Environment;
import com.breaktomake.utils.LoggerTag;
import com.breaktomake.utils.LoggerUtil;
import io.qameta.allure.Step;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.List;

public class BasePage {

    protected WebDriver driver;
    private final int TIMEOUT = Environment.getTimeout(); // —Ç–µ–ø–µ—Ä—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥

    public BasePage(WebDriver driver) {
        this.driver = driver;
    }

    @Step("–û–∂–∏–¥–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞: {locator}")
    protected WebElement waitForElementToBeVisible(By locator) {
        LoggerUtil.debug(LoggerTag.PAGE, "‚åõ –ñ–¥—ë–º –≤–∏–¥–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–∞: " + locator);
        return new WebDriverWait(driver, Duration.ofSeconds(TIMEOUT))
                .until(ExpectedConditions.visibilityOfElementLocated(locator));
    }

    @Step("–û–∂–∏–¥–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {locator}")
    protected List<WebElement> waitForElementsToBeVisible(By locator) {
        LoggerUtil.debug(LoggerTag.PAGE, "‚åõ –ñ–¥—ë–º –≤–∏–¥–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + locator);
        return new WebDriverWait(driver, Duration.ofSeconds(TIMEOUT))
                .until(ExpectedConditions.visibilityOfAllElementsLocatedBy(locator));
    }

    @Step("–û–∂–∏–¥–∞–Ω–∏–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–∂–∞—Ç–∏–µ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É: {locator}")
    protected void click(By locator) {
        LoggerUtil.info(LoggerTag.PAGE, "üñ± –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É: " + locator);
        WebElement element = new WebDriverWait(driver, Duration.ofSeconds(TIMEOUT))
                .until(ExpectedConditions.elementToBeClickable(locator));
        element.click();
    }

    @Step("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞: {locator}")
    protected String getText(By locator) {
        LoggerUtil.debug(LoggerTag.PAGE, "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞: " + locator);
        return waitForElementToBeVisible(locator).getText();
    }

    @Step("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ WebElement")
    protected String getText(WebElement element) {
        LoggerUtil.debug(LoggerTag.PAGE, "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–∞: " + element);
        return element.getText();
    }

    @Step("–í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ '{text}' –≤ —ç–ª–µ–º–µ–Ω—Ç: {locator}")
    protected void type(By locator, String text) {
        LoggerUtil.info(LoggerTag.PAGE, "‚å®Ô∏è –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞: '" + text + "' –≤ —ç–ª–µ–º–µ–Ω—Ç: " + locator);
        WebElement element = waitForElementToBeVisible(locator);
        element.clear();
        element.sendKeys(text);
    }

    @Step("–ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —ç–ª–µ–º–µ–Ω—Ç–∞: {locator}")
    protected void scrollToElement(By locator) {
        LoggerUtil.debug(LoggerTag.PAGE, "üìú –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–æ —ç–ª–µ–º–µ–Ω—Ç–∞: " + locator);
        WebElement element = waitForElementToBeVisible(locator);
        ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", element);
    }

    @Step("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞: {locator}")
    protected boolean isDisplayed(By locator) {
        try {
            boolean visible = waitForElementToBeVisible(locator).isDisplayed();
            LoggerUtil.debug(LoggerTag.PAGE, "‚úÖ –≠–ª–µ–º–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è: " + locator);
            return visible;
        } catch (TimeoutException | NoSuchElementException e) {
            LoggerUtil.warn(LoggerTag.PAGE, "‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è: " + locator);
            return false;
        }
    }
}
